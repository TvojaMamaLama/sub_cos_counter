# Environment variables from .env file in project root
# Usage: docker-compose --env-file ../../.env up

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: subscription-bot-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-sub_cos_counter}
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../migrations/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-postgres} -d ${DATABASE_NAME:-sub_cos_counter}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - subscription-bot-network

  # Subscription Bot
  bot:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile
    container_name: subscription-bot
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Application
      APP_NAME: ${APP_NAME:-Subscription Tracker Bot}
      APP_VERSION: ${APP_VERSION:-1.0.0}
      APP_ENVIRONMENT: ${APP_ENVIRONMENT:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
      
      # Telegram
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_USE_WEBHOOK: ${TELEGRAM_USE_WEBHOOK:-false}
      TELEGRAM_WEBHOOK_URL: ${TELEGRAM_WEBHOOK_URL:-}
      TELEGRAM_ALLOWED_USER: ${TELEGRAM_ALLOWED_USER:-0}
      
      # Database
      DATABASE_URL: postgres://${DATABASE_USER:-postgres}:${DATABASE_PASSWORD:-postgres}@postgres:5432/${DATABASE_NAME:-sub_cos_counter}?sslmode=disable
      DATABASE_MAX_CONNECTIONS: ${DATABASE_MAX_CONNECTIONS:-25}
      DATABASE_MAX_IDLE_TIME: ${DATABASE_MAX_IDLE_TIME:-15}
      DATABASE_CONN_MAX_LIFETIME: ${DATABASE_CONN_MAX_LIFETIME:-60}
      
      # Logging
      LOGGING_LEVEL: ${LOGGING_LEVEL:-info}
      LOGGING_FORMAT: ${LOGGING_FORMAT:-json}
      LOGGING_OUTPUT: ${LOGGING_OUTPUT:-stdout}
    volumes:
      - ../../logs:/app/logs:rw
      - ../../config:/app/config:ro
    ports:
      - "${BOT_PORT:-8080}:8080"
    networks:
      - subscription-bot-network
    labels:
      - "com.subscription-bot.description=Telegram bot for tracking subscriptions"
      - "com.subscription-bot.version=${APP_VERSION:-1.0.0}"

  # Atlas for migrations (optional service)
  atlas:
    image: arigaio/atlas:latest
    container_name: subscription-bot-atlas
    profiles: ["migration"]  # Only run when explicitly specified
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ATLAS_DATABASE_URL: postgres://${DATABASE_USER:-postgres}:${DATABASE_PASSWORD:-postgres}@postgres:5432/${DATABASE_NAME:-sub_cos_counter}?sslmode=disable
    volumes:
      - ../../migrations:/migrations:ro
      - ./atlas.docker.hcl:/atlas.hcl:ro
    working_dir: /
    command: ["migrate", "apply", "--env", "docker"]
    networks:
      - subscription-bot-network

volumes:
  postgres_data:
    driver: local
    labels:
      - "com.subscription-bot.description=PostgreSQL data volume"

networks:
  subscription-bot-network:
    driver: bridge
    labels:
      - "com.subscription-bot.description=Internal network for subscription bot services"